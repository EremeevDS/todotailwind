{"version":3,"sources":["components/AddList/AddList.jsx","components/Badge/Badge.jsx","components/List/List.jsx","components/AddTask/AddTask.jsx","components/Tasks/Tasks.jsx","components/HelloPage/HelloPage.jsx","components/Nav/Nav.jsx","App.js","index.js"],"names":["AddList","props","colors","onAdd","React","useState","isVizible","setIsVizible","selectedColor","setSelectedColor","inputValue","setInputValue","isLoading","setIsLoading","useEffect","Array","isArray","id","icon","faPlus","items","name","viziblePopup","className","type","placeholder","value","onChange","e","target","map","el","color","onClick","class","axios","post","colorId","tasks","then","data","filter","listObj","finally","Badge","List","delIcon","isRemovable","onRemove","onSelectItem","activeItem","activeAll","showAll","classNames","length","AddTask","onAddTask","list","vizibleForm","setVizibleForm","toggleFormVizible","obj","Tasks","onTitleEdit","onEdit","onDone","style","hex","faPencilAlt","newTitle","window","prompt","patch","defaultChecked","completed","listId","htmlFor","faCheck","text","faTrash","HelloPage","src","alt","Nav","showAllLists","lists","selectedList","onRemoveList","selectItem","onAddList","width","setWidth","displayMobileNav","updateWidth","innerWidth","addEventListener","removeEventListener","useWindowDimensions","changeNav","Fragment","hidden","faTimes","faListUl","faBars","App","setLists","setColors","setSelectedList","setShowAll","history","useHistory","location","useLocation","get","pathname","split","find","Number","title","newList","push","item","onRemoveTask","taskId","delete","task","onEditTask","listTask","onDoneTask","importantState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAyEeA,MAnEf,SAAiBC,GACd,IAAQC,EAAkBD,EAAlBC,OAAQC,EAAUF,EAAVE,MAEhB,EAAkCC,IAAMC,UAAS,GAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CH,IAAMC,WAAhD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAoCL,IAAMC,SAAS,IAAnD,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAkCP,IAAMC,UAAS,GAAjD,mBAAOO,EAAP,KAAkBC,EAAlB,KAoBA,OAlBAT,IAAMU,WAAU,WACTC,MAAMC,QAAQd,IACfO,EAAiBP,EAAO,GAAGe,MAE9B,CAACf,IAeD,gCACG,cAAC,EAAD,CACGgB,KAAMC,IACNC,MAAO,CACJ,CACGH,GAAI,EACJI,KAAM,oFAGZC,aAAc,kBAAMf,GAAcD,MAEpCA,GAAa,sBAAKiB,UAAU,sDAAf,UACX,uBACGC,KAAK,OACLC,YAAY,6HACZF,UAAU,mEACVG,MAAOhB,EACPiB,SAAU,SAAAC,GAAC,OAAIjB,EAAciB,EAAEC,OAAOH,UAEzC,oBAAIH,UAAU,4BAAd,SACIrB,EAAO4B,KAAI,SAAAC,GAAE,OACX,6BACG,cAAC,EAAD,CACGC,MAAOD,EAAGV,KACVY,QAAS,kBAAMxB,EAAiBsB,EAAGd,KACnCiB,MAAK,UAAK1B,IAAkBuB,EAAGd,IAAM,gBAAhC,eAJFc,EAAGd,SASlB,wBACGM,UAAU,4EACVU,QA7CM,WACfpB,GAAa,GACbsB,IAAMC,KAAK,8BAA+B,CAAEf,KAAMX,EAAY2B,QAAS7B,EAAe8B,MAAO,KAAMC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAClGR,EAAQ9B,EAAOuC,QAAO,SAAAV,GAAE,OAAIA,EAAGd,KAAOT,KAAe,GACrDkC,EAAO,2BAAQF,GAAR,IAAcR,UAC3B7B,EAAMuC,GACNnC,GAAa,GACbE,EAAiBP,EAAO,GAAGe,IAC3BN,EAAc,OAEbgC,SAAQ,kBAAM9B,GAAa,OAiCzB,SAGED,EAAY,kEAAkB,sDCvD7BgC,MATf,SAAe3C,GACZ,OACG,mBACGsB,UAAS,uBAAkBtB,EAAM+B,MAAxB,YAAiC/B,EAAMiC,OAChDD,QAAShC,EAAMgC,W,8BCsCTY,MArCf,SAAc5C,GAEX,IAAQmB,EAA4GnB,EAA5GmB,MAAOF,EAAqGjB,EAArGiB,KAAM4B,EAA+F7C,EAA/F6C,QAASC,EAAsF9C,EAAtF8C,YAAaC,EAAyE/C,EAAzE+C,SAAU1B,EAA+DrB,EAA/DqB,aAAc2B,EAAiDhD,EAAjDgD,aAAcC,EAAmCjD,EAAnCiD,WAAYC,EAAuBlD,EAAvBkD,UAAWC,EAAYnD,EAAZmD,QAExG,OACG,oBAAI7B,UAAU,YAAYU,QAASX,GAA8B6B,EAAjE,SACI/B,GAASA,EAAMU,KAAI,SAACC,GAAD,OACjB,qBAEGE,QAAS,WAAOgB,GAAgBA,EAAalB,IAC7CR,UAAW8B,IAAW,4EACnB,CAAE,OAAUH,GAAcA,EAAWjC,KAAOc,EAAGd,IAC/C,CAAE,OAAWmC,IALnB,UASIlC,EACE,cAAC,IAAD,CAAiBA,KAAMA,EAAMK,UAAU,gCAEvC,cAAC,EAAD,CACMS,MAAOD,EAAGC,MAAMX,KAChBa,MAAO,KAGhB,sBAAMX,UAAU,cAAhB,SAA+BQ,EAAGV,OACjCU,EAAGO,OAAS,sBAAMf,UAAU,+CAAhB,SAAgEQ,EAAGO,MAAMgB,SACrFP,GAAe,cAAC,IAAD,CACb7B,KAAM4B,EACNvB,UAAU,gDACVU,QAAS,kBAAMe,EAASjB,EAAGd,SArBzBc,EAAGd,UC+CRsC,MAxDf,SAAiBtD,GAEd,IAAQuD,EAAoBvD,EAApBuD,UAAWC,EAASxD,EAATwD,KAEnB,EAAsCrD,IAAMC,UAAS,GAArD,mBAAOqD,EAAP,KAAoBC,EAApB,KACA,EAAoCvD,IAAMC,SAAS,IAAnD,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMiD,EAAoB,WACvBD,GAAgBD,IAgBnB,OACG,qBAAKnC,UAAU,GAAf,SAEOmC,EAOE,sBAAKnC,UAAU,GAAf,UACG,uBACGG,MAAOhB,EACPiB,SAAU,SAAAC,GAAC,OAAIjB,EAAciB,EAAEC,OAAOH,QACtCF,KAAK,OACLC,YAAY,4EACZF,UAAU,+EAEb,wBACGA,UAAU,6GACVU,QAjCF,WACb,IAAM4B,EAAM,CACT,OAAUJ,EAAKxC,GACf,KAAQP,EACR,WAAa,GAEhByB,IAAMC,KAAK,8BAA+ByB,GAAKtB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACpDgB,EAAUC,EAAKxC,GAAIuB,GACnBoB,IACAjD,EAAc,QAsBL,8DAIA,wBACGY,UAAU,yFACVU,QAAS2B,EAFZ,iEAjBH,sBAAKrC,UAAU,uDAAf,UACG,cAAC,IAAD,CAAiBL,KAAMC,MACvB,sBAAMI,UAAU,OAAOU,QAAS2B,EAAhC,yG,MCkCHE,MA7Df,SAAe7D,GACZ,IAAQwD,EAA2DxD,EAA3DwD,KAAMM,EAAqD9D,EAArD8D,YAAaP,EAAwCvD,EAAxCuD,UAAWR,EAA6B/C,EAA7B+C,SAAUgB,EAAmB/D,EAAnB+D,OAAQC,EAAWhE,EAAXgE,OAaxD,OACG,sBAAK1C,UAAU,wCAAf,UACG,qBAAIA,UAAU,gFACd2C,MAAO,CAAClC,MAAOyB,EAAKzB,MAAMmC,KAD1B,UAEEV,EAAKpC,KACJ,cAAC,IAAD,CAAiBH,KAAMkD,IAAanC,QAhB3B,WACf,IAAMoC,EAAWC,OAAOC,OAAO,mIAA2Bd,EAAKpC,MAC3DgD,GACDlC,IAAMqC,MAAM,+BAAiCf,EAAKxC,GAAG,CAClDI,KAAMgD,IACN9B,MAAK,WACLwB,EAAYN,EAAKxC,GAAIoD,OAUmC9C,UAAU,kFAEpEkC,EAAKnB,QAAUmB,EAAKnB,MAAMgB,QACxB,oBAAI/B,UAAU,2DAAd,qHAEFkC,EAAKnB,OAASmB,EAAKnB,MAAMR,KAAI,SAACC,GAAD,OAC3B,sBAAKR,UAAU,8BAAf,UACG,sBAAKA,UAAU,WAAf,UACG,uBACGC,KAAK,WACLP,GAAE,cAASc,EAAGd,IACdM,UAAU,SACVkD,eAAgB1C,EAAG2C,YAEtB,uBACGzC,QAAS,kBAAMgC,EAAOlC,EAAG4C,OAAQ5C,EAAGd,KACpC2D,QAAO,cAAS7C,EAAGd,IACnBM,UAAU,6GAHb,SAKG,cAAC,IAAD,CAAiBL,KAAM2D,IAAStD,UAAU,+BAGhD,mBAAGA,UAAU,yBAAb,SAAuCQ,EAAG+C,OAC1C,sBAAKvD,UAAU,6CAAf,UACG,qBAAKU,QAAS,kBAAK+B,EAAOP,EAAKxC,GAAIc,IAAKR,UAAU,6DAAlD,SACG,cAAC,IAAD,CAAiBL,KAAMkD,QAE1B,qBAAKnC,QAAS,kBAAMe,EAASS,EAAKxC,GAAIc,EAAGd,KAAKM,UAAU,wDAAxD,SACG,cAAC,IAAD,CAAiBL,KAAM6D,aAtBkBhD,EAAGd,OA2BxD,cAAC,EAAD,CAEGuC,UAAWA,EACXC,KAAMA,GAFDA,EAAKxC,QCvCP+D,MAtBf,WACG,OACG,sBAAKzD,UAAU,wFAAf,UACG,oBAAIA,UAAU,kCAAd,8IACA,sBAAKA,UAAU,yBAAf,UACG,qBAAKA,UAAU,sCAAf,SACG,qBAAIA,UAAU,YAAd,UACG,oBAAIA,UAAU,mBAAd,0GACA,gJACA,iJACA,sMACA,oKACA,wNAGN,qBAAKA,UAAU,mCAAmC0D,IAAI,YAAYC,IAAI,gBCsEnEC,MA/Ef,SAAalF,GAEV,IAAOmF,EAA4GnF,EAA5GmF,aAAchC,EAA8FnD,EAA9FmD,QAASiC,EAAqFpF,EAArFoF,MAAOC,EAA8ErF,EAA9EqF,aAAcC,EAAgEtF,EAAhEsF,aAAcC,EAAkDvF,EAAlDuF,WAAYtF,EAAsCD,EAAtCC,OAAQuF,EAA8BxF,EAA9BwF,UAAWC,EAAmBzF,EAAnByF,MAAOC,EAAY1F,EAAZ0F,SAwBjGC,EAtBN,WAEG,IAAMC,EAAc,WACdvB,OAAOwB,WAAa,KACpBH,GAAS,GAETrB,OAAOwB,WAAa,KACpBH,GAAS,IAaf,OATAvF,IAAMU,WAAU,WACb+E,MACA,IAEHzF,IAAMU,WAAU,WAEd,OADAwD,OAAOyB,iBAAiB,SAAUF,GAC3B,kBAAMvB,OAAO0B,oBAAoB,SAAUH,OAG7CH,EAEeO,GACnBC,EAAY,WACfP,GAAUD,IAGb,OACG,eAAC,IAAMS,SAAP,WACG,sBACGC,QAA8B,IAArBR,GAA8B,SACvCrE,UAAU,yGAFb,UAIG,qBACGA,UAAU,yFACVU,QAASiE,EAFZ,SAIG,cAAC,IAAD,CAAiBhF,KAAMmF,IAAS9E,UAAU,kCAE7C,cAAC,EAAD,CACGL,KAAMoF,IACNlF,MAAO,CACP,CACGH,GAAI,EACJI,KAAM,4DAGT8B,UAAWiC,EACXhC,QAASA,IAEXiC,GAAS,cAAC,EAAD,CACPjE,MAAOiE,EACPnC,WAAYoC,EACZxC,QAASiC,IACThC,aAAa,EACbC,SAAUuC,EACVtC,aAAcuC,IAEjB,cAAC,EAAD,CACGtF,OAAQA,EACRC,MAAOsF,OAGb,qBAAKW,QAA8B,IAArBR,GAA+B,SAAUrE,UAAU,6EAAjE,SACG,qBACGA,UAAU,iEACVU,QAASiE,EAFZ,SAIG,cAAC,IAAD,CAAiBhF,KAAMqF,IAAQhF,UAAU,4C,MCkFzCiF,MA1Jf,WAEE,MAA0BpG,IAAMC,SAAS,MAAzC,mBAAOgF,EAAP,KAAcoB,EAAd,KACA,EAA4BrG,IAAMC,SAAS,MAA3C,mBAAOH,EAAP,KAAewG,EAAf,KACA,EAAwCtG,IAAMC,WAA9C,mBAAOiF,EAAP,KAAqBqB,EAArB,KACA,EAA8BvG,IAAMC,UAAS,GAA7C,mBAAO+C,EAAP,KAAgBwD,EAAhB,KACA,EAA0BxG,IAAMC,SAASiE,OAAOwB,YAAhD,mBAAOJ,EAAP,KAAcC,EAAd,KAEIkB,EAAUC,cACVC,EAAWC,cAEf5G,IAAMU,WAAU,WACdqB,IAAM8E,IAAI,0DAA0D1E,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACzEiE,EAASjE,MAEXL,IAAM8E,IAAI,gCAAgC1E,MAAK,YAAY,IAAVC,EAAS,EAATA,KAC/CkE,EAAUlE,QAEX,IAEHpC,IAAMU,WAAU,WACd,IAAM6D,EAASoC,EAASG,SAASC,MAAM,UAAU,GACjD,GAAI9B,EAAO,CACT,IAAM5B,EAAO4B,EAAM+B,MAAK,SAAA3D,GAAI,OAAIA,EAAKxC,KAAOoG,OAAO1C,MACnDgC,EAAgBlD,MAEjB,CAAC4B,EAAO0B,EAASG,WAEpB,IAgBMnD,EAAc,SAAC9C,EAAGqG,GACtB,IAAMC,EAAUlC,EAAMvD,KAAI,SAAAC,GAIxB,OAHGA,EAAGd,KAAOA,IACXc,EAAGV,KAAOiG,GAELvF,KAET0E,EAASc,IAELnC,EAAe,WACnByB,EAAQW,KAAK,UACbb,EAAgB,MAChBC,GAAW,GACXjB,GAAS,IAELnC,EAAY,SAACmB,EAAQd,GACzB,IAAM0D,EAAUlC,EAAMvD,KAAI,SAAA2F,GAIxB,OAHGA,EAAKxG,KAAO0D,IACb8C,EAAKnF,MAAL,sBAAiBmF,EAAKnF,OAAtB,CAA6BuB,KAExB4D,KAEThB,EAASc,IAELG,EAAe,SAAC/C,EAAQgD,GAC5BxF,IAAMyF,OAAO,+BAAiCD,GAAQpF,MAAK,WACzD,IAAMgF,EAAUlC,EAAMvD,KAAI,SAAA2B,GAIxB,OAHGA,EAAKxC,KAAO0D,IACblB,EAAKnB,MAAQmB,EAAKnB,MAAMG,QAAO,SAAAoF,GAAI,OAAIA,EAAK5G,KAAO0G,MAE9ClE,KAETgD,EAASc,OAGPO,EAAa,SAACnD,EAAQkD,GAC1B,IAAMxD,EAAWC,OAAOC,OAAO,mIAA2BsD,EAAK/C,MAC/D3C,IAAMqC,MAAM,+BAAiCqD,EAAK5G,GAAI,CAAC6D,KAAMT,IAAW9B,MAAK,YAAU,EAARC,KAAS,IAChF+E,EAAUlC,EAAMvD,KAAI,SAAA2B,GASxB,OARGA,EAAKxC,KAAO0D,IACblB,EAAKnB,MAAQmB,EAAKnB,MAAMR,KAAI,SAAAiG,GAI1B,OAHGA,EAAS9G,KAAO4G,EAAK5G,KACtB8G,EAASjD,KAAOT,GAEX0D,MAGJtE,KAETgD,EAASc,OAGPS,EAAa,SAACrD,EAAQgD,GAC1B,IAAMM,EAAiB5C,EAAM+B,MAAK,SAAA3D,GAAI,OAAIA,EAAKxC,KAAO0D,KAAQrC,MAAM8E,MAAK,SAAAS,GAAI,OAAIA,EAAK5G,KAAO0G,KAAQjD,UACrGvC,IAAMqC,MAAM,+BAAiCmD,EAAQ,CAACjD,WAAYuD,IAAiB1F,MAAK,YAAW,EAATC,KAAU,IAC5F+E,EAAUlC,EAAMvD,KAAI,SAAA2B,GASxB,OARGA,EAAKxC,KAAO0D,IACblB,EAAKnB,MAAQmB,EAAKnB,MAAMR,KAAI,SAAA+F,GAI1B,OAHGA,EAAK5G,KAAO0G,IACbE,EAAKnD,WAAamD,EAAKnD,WAElBmD,MAGJpE,KAETgD,EAASc,OAIb,OACE,sBAAKhG,UAAU,gBAAf,UACE,cAAC,EAAD,CACE6D,aAAcA,EACdhC,QAASA,EACTiC,MAAOA,EACPC,aAAcA,EACdC,aAzFe,SAACtE,GACpBkB,IAAMyF,OAAO,+BAAiC3G,GAAIsB,MAAK,WACrD,IAAMgF,EAAUlC,EAAM5C,QAAO,SAAAV,GAAE,OAAIA,EAAGd,KAAOA,KAC7CwF,EAASc,GACTnC,QAsFEI,WAnFa,SAACiC,GAClBZ,EAAQW,KAAR,iBAAuBC,EAAKxG,KAC5B2F,GAAW,GACXjB,GAAS,IAiFLzF,OAAQA,EACRuF,UAhGY,SAAC5B,GACjB,IAAM0D,EAAO,sBAAOlC,GAAP,CAAcxB,IAC3B4C,EAASc,IA+FL7B,MAAOA,EACPC,SAAUA,IAEZ,uBAAMpE,UAAU,2BAAhB,UACG8D,GAASC,GAAgB,cAAC,EAAD,CACxB7B,KAAM6B,EACNvB,YAAaA,EACbP,UAAWA,EACXR,SAAU0E,EACV1D,OAAQ8D,EACR7D,OAAQ+D,IAET5E,GAAWiC,EAAMvD,KAAI,SAAC2B,GAAD,OACpB,cAAC,EAAD,CAEAA,KAAMA,EACNM,YAAaA,EACbP,UAAWA,EACXR,SAAU0E,EACV1D,OAAQ8D,EACR7D,OAAQ+D,GANHvE,EAAKxC,QASVqE,IAAiBlC,GAAW,cAAE,EAAF,WCtJtC8E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.9b3a7050.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { List, Badge } from '../'\n\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nfunction AddList(props) {\n   const { colors, onAdd } = props\n\n   const [isVizible, setIsVizible] = React.useState(false)\n   const [selectedColor, setSelectedColor] = React.useState()\n   const [inputValue, setInputValue] = React.useState('')\n   const [isLoading, setIsLoading] = React.useState(false)\n\n   React.useEffect(() => {\n      if (Array.isArray(colors)) {\n         setSelectedColor(colors[0].id)\n      }\n   }, [colors])\n\n   const onAddList = () => {\n      setIsLoading(true)\n      axios.post('http://localhost:3001/lists', { name: inputValue, colorId: selectedColor, tasks: [] }).then(({ data }) => {\n         const color = colors.filter(el => el.id === selectedColor)[0];\n         const listObj = { ...data, color};\n         onAdd(listObj);\n         setIsVizible(false)\n         setSelectedColor(colors[0].id)\n         setInputValue('')\n      })\n         .finally(() => setIsLoading(false))\n   }\n   return (\n      <div>\n         <List\n            icon={faPlus}\n            items={[\n               {\n                  id: 0,\n                  name: 'Добавить папку',\n               }\n            ]}\n            viziblePopup={() => setIsVizible(!isVizible)}\n         />\n         {isVizible && <div className='bg-white px-2 py-5 -mt-5 rounded-md drop-shadow-2xl'>\n            <input\n               type=\"text\"\n               placeholder='Введите название папки'\n               className='px-2 py-2 w-full rounded-md border text-sm hover:border-gray-400'\n               value={inputValue}\n               onChange={e => setInputValue(e.target.value)}\n            />\n            <ul className='flex justify-between my-2'>\n               {colors.map(el => (\n                  <li key={el.id}>\n                     <Badge\n                        color={el.name}\n                        onClick={() => setSelectedColor(el.id)}\n                        class={`${selectedColor === el.id && 'badge--active'} w-6 h-6`}\n                     />\n                  </li>\n               ))}\n            </ul>\n            <button\n               className='w-full bg-green-300 py-2 rounded-md text-white text-sm hover:bg-green-400'\n               onClick={onAddList}\n            >{isLoading ? 'Добавление...' : 'Создать'}\n            </button>\n         </div>}\n      </div>\n   )\n}\n\nexport default AddList\n","import React from 'react'\n\nfunction Badge(props) {\n   return (\n      <i\n         className={`badge badge--${props.color} ${props.class}`}\n         onClick={props.onClick}\n      />\n   )\n}\n\nexport default Badge\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport classNames from 'classnames'\n\nimport { Badge } from '../'\n\nimport './List.scss'\nfunction List(props) {\n\n   const { items, icon, delIcon, isRemovable, onRemove, viziblePopup, onSelectItem, activeItem, activeAll, showAll } = props\n\n   return (\n      <ul className='list mb-6' onClick={viziblePopup ? viziblePopup : activeAll}>\n         {items && items.map((el) => (\n            <li\n               key={el.id}\n               onClick={() => {onSelectItem && onSelectItem(el)}}\n               className={classNames('flex items-center cursor-pointer px-5 py-2 mb-1 rounded-md hover:bg-white',\n                  { 'active': activeItem && activeItem.id === el.id},\n                  { 'active' : showAll}\n               )}\n               \n            >\n               {icon ?\n                  <FontAwesomeIcon icon={icon} className='inline-flex mr-2 opacity-40' />\n                  :\n                  <Badge\n                        color={el.color.name}\n                        class={''}\n                  />\n               }\n               <span className='flex-1 mr-3'>{el.name}</span>\n               {el.tasks && <span className='bg-gray-100 py-0.5 px-2 rounded-full text-xs'>{el.tasks.length}</span>}\n               {isRemovable && <FontAwesomeIcon\n                  icon={delIcon}\n                  className='list__remove-icon inline-flex opacity-40 ml-3'\n                  onClick={() => onRemove(el.id)}\n                  />}\n            </li>\n         ))}\n      </ul>\n   )\n}\n\nexport default List\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\n\nfunction AddTask(props) {\n\n   const { onAddTask, list } = props\n\n   const [vizibleForm, setVizibleForm] = React.useState(false)\n   const [inputValue, setInputValue] = React.useState('')\n\n   const toggleFormVizible = () => {\n      setVizibleForm(!vizibleForm)\n   }\n\n   const AddTask = () => {\n      const obj = {\n         \"listId\": list.id,\n         \"text\": inputValue,\n         \"completed\": false\n      }\n      axios.post('http://localhost:3001/tasks', obj).then(({ data }) => {\n         onAddTask(list.id, data)\n         toggleFormVizible()\n         setInputValue('')\n      })\n   }\n\n   return (\n      <div className=''>\n         {\n            !vizibleForm ?\n\n               <div className='ml-1 cursor-pointer py-1 opacity-30 hover:opacity-70'>\n                  <FontAwesomeIcon icon={faPlus} />\n                  <span className='ml-3' onClick={toggleFormVizible}>Добавить задачу</span>\n               </div>\n               :\n               <div className=''>\n                  <input\n                     value={inputValue}\n                     onChange={e => setInputValue(e.target.value)}\n                     type=\"text\"\n                     placeholder='Введите текст'\n                     className='h-12 px-2 py-2 w-full rounded-md border text-md mb-2 hover:border-gray-400'\n                  />\n                  <button\n                     className='w-full bg-green-300 py-2 px-6 rounded-md text-white text-md mr-2 mb-2 hover:bg-green-400 sm:w-auto sm:mb-0'\n                     onClick={AddTask}\n                  >Добавить</button>\n                  <button\n                     className='w-full bg-gray-200 py-2 px-6 rounded-md text-white text-md hover:bg-gray-300 sm:w-auto'\n                     onClick={toggleFormVizible}\n                  >Отменить</button>\n               </div>\n         }\n      </div>\n   )\n}\n\nexport default AddTask\n","import React from 'react'\nimport axios from 'axios'\n\nimport AddTask from '../AddTask/AddTask'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPencilAlt, faCheck, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nimport './Tasks.scss'\n\nfunction Tasks(props) {\n   const { list, onTitleEdit, onAddTask, onRemove, onEdit, onDone } = props\n\n   const editTitle = () =>{\n      const newTitle = window.prompt('Введите новый заголовок', list.name)\n      if (newTitle){\n         axios.patch('http://localhost:3001/lists/' + list.id,{\n            name: newTitle\n         }).then(() =>{\n            onTitleEdit(list.id, newTitle)\n         })\n      }\n   }\n\n   return (\n      <div className='pt-10 px-5 sm:pt-15 sm:px-10 md:pt-20'>\n         <h2 className='text-4xl mb-8 font-light pb-6 border-b-2 border-gray-100 md:mb-12 md:text-5xl'\n         style={{color: list.color.hex}}\n         >{list.name}\n            <FontAwesomeIcon icon={faPencilAlt} onClick={editTitle} className='fill-current text-gray-200 text-xl ml-4 hover:text-gray-400 cursor-pointer' />\n         </h2>\n         {list.tasks && !list.tasks.length &&\n            <h2 className='text-2xl font-bold text-gray-300 whitespace-nowrap mb-12'>Задачи отсутствуют</h2>\n         }\n         {list.tasks && list.tasks.map((el) => (\n            <div className='task flex items-center mb-6' key={el.id}>\n               <div className='checkbox'>\n                  <input\n                     type=\"checkbox\"\n                     id={`task${el.id}`}\n                     className='hidden'\n                     defaultChecked={el.completed}\n                  />\n                  <label\n                     onClick={() => onDone(el.listId, el.id)}\n                     htmlFor={`task${el.id}`}\n                     className='flex items-center justify-center w-6 h-6 border-2 rounded-full inline-block border-gray-300 cursor-pointer'\n                     >\n                     <FontAwesomeIcon icon={faCheck} className='svg w-3 h-3 opacity-0' />\n                  </label>\n               </div>\n               <p className='flex-1 ml-2 md:text-xl'>{el.text}</p>\n               <div className='task__actions flex opacity-30 lg:opacity-0'>\n                  <div onClick={() =>onEdit(list.id, el)} className='py-1 px-2 rounded-sm cursor-pointer mr-1 hover:bg-gray-300'>\n                     <FontAwesomeIcon icon={faPencilAlt} />\n                  </div>\n                  <div onClick={() => onRemove(list.id, el.id)} className='py-1 px-2 rounded-sm cursor-pointer hover:bg-gray-300'>\n                     <FontAwesomeIcon icon={faTrash} />\n                  </div>\n               </div>\n            </div>\n         ))}\n         <AddTask\n            key={list.id}\n            onAddTask={onAddTask}\n            list={list}\n         />\n      </div>\n   )\n}\n\nexport default Tasks\n","import React from 'react'\n\nfunction HelloPage() {\n   return (\n      <div className='max-w-screen-md w-full h-72 rounded-lg bg-blue-400 mx-auto mt-16 pt-5 px-10 relative '>\n         <h1 className='text-center text-2xl text-white'>Приложение список-задач</h1>\n         <div className='flex text-white h-full'>\n            <div className='flex flex-1 flex-col justify-center'>\n               <ul className='list-disc'>\n                  <h3 className='font-medium mb-1'>В обновлении от 29.10.2021:</h3>\n                  <li>Создание папок задач</li>\n                  <li>Выбор цвета для папки</li>\n                  <li>Редактирование названия папки</li>\n                  <li>Удаление папки и ее задач</li>\n                  <li>Просмотр всех папок одновременно</li>\n               </ul>\n            </div>\n            <img className='h-52 absolute -right-7 -bottom-7' src='./img.png' alt='todo'/>\n         </div>\n\n      </div>\n   )\n}\n\nexport default HelloPage\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\n\nimport {List, AddList} from '../index'\n\nimport { faListUl, faTrash, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nfunction Nav(props) {\n\n   const {showAllLists, showAll, lists, selectedList, onRemoveList, selectItem, colors, onAddList, width, setWidth} = props\n\n   function useWindowDimensions() {\n    \n      const updateWidth = () => {\n         if(window.innerWidth < 768){\n            setWidth(true)\n         }\n         if(window.innerWidth > 768){\n            setWidth(false)\n         }\n      };\n\n      React.useEffect(() =>{\n         updateWidth()\n      }, [])\n    \n      React.useEffect(() => {\n        window.addEventListener(\"resize\", updateWidth);\n        return () => window.removeEventListener(\"resize\", updateWidth);\n      });\n    \n      return width\n   }\n   const displayMobileNav = useWindowDimensions()\n   const changeNav = () =>{\n      setWidth(!width)\n   }\n\n   return (\n      <React.Fragment>\n         <nav\n            hidden={(displayMobileNav === true) && 'hidden'}\n            className='overflow-y-scroll pt-10 bg-gray-50 border-r-2 border-gray-100 px-10 sm:pt-15 md:pt-20 md:px-5 lg:px-10'\n            >\n            <div\n               className='w-full px-3 py-2 inline-flex rounded-md bg-gray-100 mb-6 hover:bg-white cursor-pointer'\n               onClick={changeNav}\n               >\n               <FontAwesomeIcon icon={faTimes} className='text-2xl opacity-60 mx-auto'/>\n            </div>\n            <List\n               icon={faListUl}\n               items={[\n               {\n                  id: 0,\n                  name: 'Все задачи',\n               }\n               ]}\n               activeAll={showAllLists}\n               showAll={showAll}\n            />\n            {lists && <List \n               items={lists}\n               activeItem={selectedList}\n               delIcon={faTrash}\n               isRemovable={true}\n               onRemove={onRemoveList}\n               onSelectItem={selectItem}\n            />}\n            <AddList\n               colors={colors}\n               onAdd={onAddList}\n            />\n         </nav>\n         <nav hidden={(displayMobileNav === false) && 'hidden'} className='pt-10 px-1 bg-gray-50 border-r-2 border-gray-100 sm:pt-15 md:pt-20 sm:px-3'>\n            <div\n               className='px-3 py-2 inline-flex rounded-md hover:bg-white cursor-pointer'\n               onClick={changeNav}\n               >\n               <FontAwesomeIcon icon={faBars} className='text-2xl opacity-70 md:text-3xl'/>\n            </div>\n         </nav>\n      </React.Fragment>\n   )\n}\n\nexport default Nav\n","import React from 'react'\nimport axios from 'axios'\nimport { useHistory, useLocation } from 'react-router';\n\nimport {Tasks, HelloPage, Nav} from './components'\n\nimport './App.css';\n\nfunction App() {\n  \n  const [lists, setLists] = React.useState(null)\n  const [colors, setColors] = React.useState(null)\n  const [selectedList, setSelectedList] = React.useState()\n  const [showAll, setShowAll] = React.useState(false)\n  const [width, setWidth] = React.useState(window.innerWidth)\n\n  let history = useHistory();\n  let location = useLocation()\n\n  React.useEffect(() =>{\n    axios.get('http://localhost:3001/lists?_expand=color&_embed=tasks').then(({data}) => {\n      setLists(data)\n    });\n    axios.get('http://localhost:3001/colors').then(({data}) =>{\n      setColors(data)\n    });\n  }, [])\n\n  React.useEffect(() => {\n    const listId = location.pathname.split('lists/')[1];\n    if (lists) {\n      const list = lists.find(list => list.id === Number(listId));\n      setSelectedList(list);\n    }\n  }, [lists, location.pathname]);\n\n  const onAddList = (obj) =>{\n    const newList = [...lists, obj]\n    setLists(newList)\n  }\n  const onRemoveList = (id) => {\n    axios.delete('http://localhost:3001/lists/' + id).then(() =>{\n      const newList = lists.filter(el => el.id !== id)\n      setLists(newList)\n      showAllLists()\n    })\n  }\n  const selectItem = (item) =>{\n    history.push(`/lists/${item.id}`)\n    setShowAll(false)\n    setWidth(true)\n  }\n  const onTitleEdit = (id,title) =>{\n    const newList = lists.map(el => {\n      if(el.id === id){\n        el.name = title\n      }\n      return el\n    })\n    setLists(newList)\n  }\n  const showAllLists = () =>{\n    history.push('/lists')\n    setSelectedList(null)\n    setShowAll(true)\n    setWidth(true)\n  }\n  const onAddTask = (listId, obj) =>{\n    const newList = lists.map(item =>{\n      if(item.id === listId){\n        item.tasks = [...item.tasks, obj]\n      }\n      return item\n    })\n    setLists(newList)\n  }\n  const onRemoveTask = (listId, taskId) =>{\n    axios.delete('http://localhost:3001/tasks/' + taskId).then(() =>{\n      const newList = lists.map(list =>{\n        if(list.id === listId){\n          list.tasks = list.tasks.filter(task => task.id !== taskId)\n        }\n        return list\n      })\n      setLists(newList)\n    })\n  }\n  const onEditTask = (listId, task) =>{\n    const newTitle = window.prompt('Введите новый заголовок', task.text)\n    axios.patch('http://localhost:3001/tasks/' + task.id, {text: newTitle}).then(({data})=>{\n      const newList = lists.map(list =>{\n        if(list.id === listId){\n          list.tasks = list.tasks.map(listTask =>{\n            if(listTask.id === task.id){\n              listTask.text = newTitle\n            }\n            return listTask\n          })\n        }\n        return list\n      })\n      setLists(newList)\n    })\n  }\n  const onDoneTask = (listId, taskId) =>{\n    const importantState = lists.find(list => list.id === listId).tasks.find(task => task.id === taskId).completed\n    axios.patch('http://localhost:3001/tasks/' + taskId, {completed: !importantState}).then(({data}) =>{\n      const newList = lists.map(list =>{\n        if(list.id === listId){\n          list.tasks = list.tasks.map(task =>{\n            if(task.id === taskId){\n              task.completed = !task.completed\n            }\n            return task\n          })\n        }\n        return list\n      })\n      setLists(newList)\n    })\n  }\n\n  return(\n    <div className='flex h-screen'>\n      <Nav \n        showAllLists={showAllLists}\n        showAll={showAll}\n        lists={lists}\n        selectedList={selectedList}\n        onRemoveList={onRemoveList}\n        selectItem={selectItem}\n        colors={colors}\n        onAddList={onAddList}\n        width={width}\n        setWidth={setWidth}\n      />\n      <main className='flex-1 overflow-y-scroll'>\n        {lists && selectedList && <Tasks\n          list={selectedList}\n          onTitleEdit={onTitleEdit}\n          onAddTask={onAddTask}\n          onRemove={onRemoveTask}\n          onEdit={onEditTask}\n          onDone={onDoneTask}\n        />}\n        {showAll && lists.map((list) => (\n          <Tasks\n          key={list.id}\n          list={list}\n          onTitleEdit={onTitleEdit}\n          onAddTask={onAddTask}\n          onRemove={onRemoveTask}\n          onEdit={onEditTask}\n          onDone={onDoneTask}\n        />\n        ))}\n        {!selectedList && !showAll && < HelloPage />}\n      </main>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}